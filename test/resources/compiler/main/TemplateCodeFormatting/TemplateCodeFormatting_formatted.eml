$[language java]
$[domain Service]
$[D summary, main "This template contains the author that is responsible for generating the create object"]
$[D summary, main "service methods."]
$[D "**Create**"]
$[D ""]
$[D "The create method is called by create endpoints implemented in the controller class. This"]
$[D "method in turn calls a create method in the repository class however before that it will"]
$[D "assign a UUID primary key. This is also where it places some of the in-memory caching code. It"]
$[D "will also set relationships associated with the logged in (principle) user."]
$[D summary, main "Generates the Spring Boot Service classes for all entities in your project space."]
$[D main, summary ""]
$[D main, summary "Generates the Spring Boot Service classes for all entities in your project space."]
$[D "
When your application involves release and version management of some entity, this template has functions that can be useful. The template is centered around the support of a particular structure of entities that have specific relationships between eachother.

The entities involved in the pattern shown below are as follows:

| Entity | Description |
|:------:|-------------|
| O  | **Object** - This is the main entity you are trying to manage in terms of versioning and release management. For instance, lets say your entity is called Widget. This would be the non-versioned Widget.|
| V  | **Version** - This represents a entity that tracks versions of the O entity. It would have attributes that need to be under version control. In our example, this would be a version of a Widget so might be named WidgetVersion.|
| VR | **Version Release** - This entity binds our O and V entities to a release. So  |
| R  | **Release** - This represents a release of one or more O,V pairs. |
| P  | **Parent** - This is an *optional* entity that defines a context for the R entity (as a parent entity to it). |


```
    +-------+    +-------+      +--------+        +-------+          +-------+
    |   P   +---<|   R   +-----<|   VR   |>-------+   V   |>---------+   O   |>--+
    +----+--+    +-------+      +--------+        +-------+          +----+--+   |
         |                            Y                                   |      |
         |                            +-----------------------------------+      |
         +-----------------------------------------------------------------------+
Tag->           release:top    release:binder    release:version    release:object

```

These functions help support the detection of this pattern not just in terms of the tags but also the relationships between the entities.
"]
$[D "easily expanded to support many other features."]
$[let something = !otherthing]
$[capture parentId]${relationship|domain:Model|wrap:("hello") cache blah:"asdf"}Id$[/capture]
package ${domain.namespace};

$[receive distinct imports]

$[import "service/authors/ServiceBaseAuthor"]
$[import "service/authors/ServiceCRUDAuthors"]
$[*import "service/authors/ServiceCacheAuthor"*]
$[import "service/authors/ServiceUploadAuthor"]

$[foreach space.modules]
${module.name} is one of the modules.
$[/foreach]

$[function abc
  D "this is a description of this function" 
  (argument1
   D "description for arg 1 that can be pretty long because it has a lot to say about this argument for"
   D "some reason so it just keeps rambling on and on aobut it." ,
   argument2
   D "another description this time for arg 2" 
  )
]
$[/function]

$[function xyz
  D main, summary "this is a description of this function" 
  (argumentA
   D "description for arg 1 that can be pretty long because it has a lot to say about this argument for"
   D "some reason so it just keeps rambling on and on aobut it." ,
   argumentHLM
   D "another description this time for arg 2" 
  )
]
$[/function]
$[call xyz(argumentA: "", argumentHLM: 5)]

$[publisher org.entitycompiler.springboot.service
  D "This publisher ultimately builds the Service classes for the Spring Boot application but it"
  D "relies on many authors to fill it out with methods required to implement the application."
]
    $[switch track]
        $[case justin]laskdjf;askljdf
        $[case hard] qwerqwer
        $[default]do this
    $[/switch]
    $[foreach module in space.modules]
        $[if module.isIncluded]$[continue]$[/if]
$[outlet moduleLoopTop
  D "This is just inside the module foreach. An author could use this to filter out modules, for"
  D "instance."
]
$[/outlet]
        $[foreach entity in module.entities]
    $[if !(entity.isSecondary || entity.isImplicit || entity.isExtern || entity.isTransient) + 5 * (4 + xyz * efv)]xx$[continue]$[/if]
$[outlet entityLoopTop
  D "This is just inside the entity foreach. An author could use this to filter out entities, for"
  D "instance."
]
$[/outlet]
            $[file domain.namespace|path entity|domain|name "java"]
$[outlet commentHeader
  D "This outlet simply allows you to place comments at the top of the source file."
]
$[/outlet]

                $[foreach ab in bc]
    ${ab.name}dude$[let this = that]wer
                $[/foreach]

package ${domain.namespace};

$[receive distinct imports
  D "This will receive Java import statements."
]
$[send imports]
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
$[/send]

@Service
@Transactional
$[outlet classAnnotation
  D "This allows an author to add an annotation to the class definition."
]
$[/outlet]
public class ${className} {

$[receive distinct memberDecl]
$[receive distinct caches]

$[outlet members
  D "This is the top section of the class where member variables typically are placed."
]
    // no members
$[/outlet]

$[outlet constructor
  D "The constructor outlet lets you replace the simple constructor with one that supports other"
  D "functions such as auto wired objects."
]
    public ${className}() {}
$[/outlet]

$[outlet methods
  D "This outlet is where authors place the build of generated code. Some of these authors may also"
  D "be publishers to give access to specific methods."
]
    // no methods
$[/outlet]
}
            $[/file]
        $[/foreach]
    $[/foreach]
$[/publisher]
$[file domain.namespace|path "README" "md"]
# Service Classes

The classes in this directory are Service classes as part of the Spring Framework.

## Generated by

Entity Compiler v${compiler.version}

Template: `${template.name}`

$[/file]