$[log]
$[foreach typedef in space.typedefs]

Typedef: ${typedef.name}
$[/foreach]
$[foreach enum in space.enums]

Enum: ${enum.name}
$[/foreach]
$[foreach entity in space.entities]

$[let qualifier = entity.isSecondary ? "Secondary " : ""]
${qualifier}Entity: ${entity.name}
$[foreach attribute in entity.attributes]
$[switch attribute.type]
$[case uuid]
$[let typeLongName="Unique Identifier - 128 bits"]
$[case int32]
$[let typeLongName="32-bit Integer"]
$[case int64]
$[let typeLongName="64-bit Integer"]
$[case float]
$[let typeLongName="32-bit Floating Point"]
$[case double]
$[let typeLongName="64-bit Floating Point"]
$[case string]
$[let typeLongName="String of characters"]
$[case enum]
$[let typeLongName="Enum named " + attribute.type.name]
$[case typedef]
$[let typeLongName="Typedef named " + attribute.type.name]
$[case entity]
$[let typeLongName="Entity named " + attribute.type.name]
$[default]
$[let typeLongName="Unknown"]
$[/switch]
  Attribute
    Name: ${attribute.name}
    Type: ${typeLongName}
$[/foreach]
$[/foreach]
$[/log]
